name: create-tag-on-merge

on:
  pull_request:
    types: [closed]
    branches:
      - main
  push:
    branches:
      - main

jobs:
  create-tag:
    # Only run on merged PRs or direct pushes, skip if [skip ci]
    if: |
      (github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip ci]')) ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.create_tag.outputs.new_tag }}

    steps:
      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}
          fetch-tags: true
  
      - name: Create RC tag
        id: create_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get source branch name from GitHub context
          SOURCE_BRANCH="${{ github.head_ref || github.ref_name }}"
          echo "Source branch: $SOURCE_BRANCH"
          
          # Get short SHA (7 characters)
          SHORT_SHA=$(git rev-parse --short=7 HEAD)
          
          # Create tag using source branch name
          NEW_TAG="${SOURCE_BRANCH}-rc-${SHORT_SHA}"
          
          echo "=== Creating tag: $NEW_TAG ==="
          git tag $NEW_TAG
          git push origin $NEW_TAG
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "Created and pushed new tag: $NEW_TAG"
          
          # Debug information
          echo "=== Final Git State ==="
          git tag -l "*-rc-*" --sort=-creatordate | head -n 5
          git branch --show-current