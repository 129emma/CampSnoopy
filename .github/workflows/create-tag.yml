name: create-tag-on-merge

on:
  push:
    branches:
      - main

jobs:
  create-tag:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag.outputs.new_tag }}

    steps:

      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: Set up Git with GitHub App credentials
        run: |
          git config --global user.name 'SnoopyCamp'
          git config --global user.email 'SnoopyCamp[bot]@users.noreply.github.com'

      - name: Fetch and merge main into release
        run: |
          git fetch origin main release --prune

          # Check if the release branch exists
          if git show-ref --verify --quiet refs/remotes/origin/release; then
            echo "Release branch exists. Proceeding with merge."
            git checkout release
          else
            echo "Release branch does not exist. Creating it."
            git checkout -b release
          fi

          MAIN_HASH=$(git rev-parse origin/main)
          git merge origin/main --no-ff -m "Merge main into release (main hash: ${MAIN_HASH})"

      - name: Push merged changes to release
        run: |
          git push origin release
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
      
      - name: Create new tag
        id: tag
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }} 
          WITH_V: true
          DEFAULT_BUMP: minor
          RELEASE_BRANCHES: main
          PRERELEASE: true
          PRERELEASE_SUFFIX: beta